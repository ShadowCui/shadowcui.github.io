<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python的excel操作</title>
      <link href="/2021/09/25/mysql-shi-yong-ji-lu/"/>
      <url>/2021/09/25/mysql-shi-yong-ji-lu/</url>
      
        <content type="html"><![CDATA[<p>环境配置：</p><p>Ubuntu18.04</p><h1 id="MySQL安装"><a href="#MySQL安装" class="headerlink" title="MySQL安装"></a>MySQL安装</h1><p>首先将apt源进行更新</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update</code></pre><p>安装mysql服务</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> mysql-server -y</code></pre><p>安装完毕后，验证mysql版本</p><pre class=" language-bash"><code class="language-bash">mysql --version</code></pre><p><img src="https://gitee.com/AAWG/image/raw/master/202109121521352.png" alt="image-20210912152117316"></p><p>查看mysql服务状态</p><pre class=" language-bash"><code class="language-bash">systemctl status mysql.service <span class="token comment" spellcheck="true"># 查看mysql服务状态</span></code></pre><p><img src="https://gitee.com/AAWG/image/raw/master/202109121237329.png" alt="image-20210912123756301"></p><p>显示activate（runing）表示数据库已经启动</p><p>初始化配置</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> mysql_secure_installation</code></pre><p><img src="https://gitee.com/AAWG/image/raw/master/202109121320034.png" alt="image-20210912132034004"></p><p>选择N，不会进行密码的强校验</p><p><img src="https://gitee.com/AAWG/image/raw/master/202109121321237.png" alt="image-20210912132108208"></p><p>输入密码，进行数据库root密码的设置</p><p><img src="https://gitee.com/AAWG/image/raw/master/202109121321640.png" alt="image-20210912132147616"></p><p>选择Y，删除匿名用户</p><p><img src="https://gitee.com/AAWG/image/raw/master/202109121322031.png" alt="image-20210912132237005"></p><p>选择n，允许root远程连接</p><p><img src="https://gitee.com/AAWG/image/raw/master/202109121323164.png" alt="image-20210912132333138"></p><p>选择n，不删除test数据库</p><p><img src="https://gitee.com/AAWG/image/raw/master/202109121326454.png" alt="image-20210912132657425"></p><p>选择Y，修改权限立即生效</p><p>配置远程访问</p><p>Ubuntu中，MySQL缺省是只允许本地访问的，使用远程数据管理工具是连不上的；如果想要其他机器进行访问，需要进行配置找到bind-address修改值为0.0.0.0</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vi</span> /etc/mysql/mysql.conf.d/mysqld.cnf</code></pre><p><img src="https://gitee.com/AAWG/image/raw/master/202109121329537.png" alt="image-20210912132905510"></p><p>保存，重启数据库</p><pre class=" language-bash"><code class="language-bash">systemctl restart mysql.service</code></pre><p><img src="https://gitee.com/AAWG/image/raw/master/202109121330235.png" alt="image-20210912133040209"></p><p>重点来了，如果说想要数据库能够远程连接，需要保证防火墙开启，3306端口，具体如何开启，请自己行百度，这里就不进行赘述了。</p><p>开启之后使用root远程连接会有1698问题</p><pre class=" language-mysql"><code class="language-mysql">select user, plugin from mysql.user;</code></pre><pre class=" language-bash"><code class="language-bash">+-----------+-----------------------+<span class="token operator">|</span> user      <span class="token operator">|</span> plugin                <span class="token operator">|</span>+-----------+-----------------------+<span class="token operator">|</span> root      <span class="token operator">|</span> auth_socket           <span class="token operator">||</span> mysql.sys <span class="token operator">|</span> mysql_native_password <span class="token operator">||</span> dev       <span class="token operator">|</span> mysql_native_password <span class="token operator">|</span>+-----------+-----------------------+3 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.01 sec<span class="token punctuation">)</span></code></pre><p>发现<code>root</code>的plugin是<code>auth_socket</code>需要将其改为<code>mysql_native_password</code></p><pre class=" language-mysql"><code class="language-mysql">mysql> update mysql.user set authentication_string=PASSWORD('newPwd'), plugin='mysql_native_password' where user='root';Query OK, 1 row affected, 1 warning (0.00 sec)Rows matched: 1  Changed: 1  Warnings: 1mysql> flush privileges;Query OK, 0 rows affected (0.00 sec)</code></pre><p>重启mysql服务</p><p>使用Navicat premium，进行测试</p><p><img src="https://gitee.com/AAWG/image/raw/master/202109121549301.png" alt="image-20210912154941264"></p><p>连接成功，表示配置成功了</p><h1 id="MySQL简单操作"><a href="#MySQL简单操作" class="headerlink" title="MySQL简单操作"></a>MySQL简单操作</h1><p>Mysql状态的控制</p><pre class=" language-bash"><code class="language-bash">systemctl status mysql.service <span class="token comment" spellcheck="true"># 查看mysql服务状态systemctl start mysql.service # 启动mysql服务systemctl restart mysql.service # 重启mysql服务systemctl stop mysql.service # 关闭mysql服务</span></code></pre><p>登陆数据库</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> mysql -uroot -p</code></pre><p>切换数据库</p><pre class=" language-mysql"><code class="language-mysql">use xxx;(xxx为数据库的名)</code></pre><p>创建数据库</p><pre class=" language-mysql"><code class="language-mysql">create database xxx; -- 创建名为xxx的数据库</code></pre><p>创建只读用户</p><p>为xxx数据库创建用户名为username，密码为password的只读用户</p><pre class=" language-mysql"><code class="language-mysql">mysql > grant select on xxx.* to 'username'@'%' identify by "password";mysql > flush privileges;</code></pre><p>创建拥有读写权限的用户</p><pre class=" language-mysql"><code class="language-mysql">mysql > grant all privileges on xxx.* to 'username'@'%' identify by "password";mysql > flush privileges;</code></pre><h1 id="Mysql卸载"><a href="#Mysql卸载" class="headerlink" title="Mysql卸载"></a>Mysql卸载</h1><p>查看依赖</p><pre class=" language-bash"><code class="language-bash">dpkg --list<span class="token operator">|</span><span class="token function">grep</span> mysql</code></pre><p>获取一些依赖库的名</p><p>执行删除命令</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> remove xxxx<span class="token punctuation">(</span>xxx依次改为前面获取的依赖库的名<span class="token punctuation">)</span>sudo <span class="token function">apt-get</span> autoremove --purge xxxx<span class="token punctuation">(</span>xxx依次改为前面获取的依赖库的名<span class="token punctuation">)</span>sudo <span class="token function">apt-get</span> remove mysql-*sudo dpkg -l <span class="token operator">|</span><span class="token function">grep</span> ^rc<span class="token operator">|</span><span class="token function">awk</span> <span class="token string">'&amp;#123;print <span class="token variable">$2</span>&amp;#125;'</span> <span class="token operator">|</span><span class="token function">sudo</span> <span class="token function">xargs</span> dpkg -P</code></pre>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
            <tag> mysql </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-Web基础知识</title>
      <link href="/2021/09/24/ctf-web-ji-chu-zhi-shi/"/>
      <url>/2021/09/24/ctf-web-ji-chu-zhi-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li><p>HTTP（HyperText Transfer Protocol）叫超文本传输协议，Web服务器和客户端直接进行数据传输的规则，是一个无状态的应用层协议</p></li><li><p>HTTPS（HyperText Transfer Protocol over SecureSocket Layer），以安全为目标的http通道，在http的基础上通过传输加密和身份认证保证了传输过程的安全性</p></li></ul><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><p>访问<a href="https://www.baidu.com/index.html%E5%90%8E%EF%BC%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E5%92%8CWeb%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%A7%E8%A1%8C%E4%BB%A5%E4%B8%8B%E5%8A%A8%E4%BD%9C%EF%BC%9A">https://www.baidu.com/index.html后，浏览器和Web服务器执行以下动作：</a></p><ol><li><p>浏览器分析超链接中的URL</p></li><li><p>浏览器向DNS请求解析<a href="http://www.baidu.com的ip地址/">www.baidu.com的IP地址</a></p></li><li><p>DNS将解析出的IP地址220.181.38.148返回浏览器</p></li><li><p>浏览器与服务器建立TCP连接（443端口）</p></li><li><p>浏览器请求文档：GET /index.html</p></li><li><p>服务器给出响应，将文档index.html发送给浏览器</p></li><li><p>释放TCP连接</p></li><li><p>浏览器显示index.html中的内容</p><p><img src="https://gitee.com/AAWG/image/raw/master/202109192006966.png" alt="image-20210919200613837"></p></li></ol><h2 id="持久性连接与非持久性连接"><a href="#持久性连接与非持久性连接" class="headerlink" title="持久性连接与非持久性连接"></a>持久性连接与非持久性连接</h2><h3 id="非持久性连接"><a href="#非持久性连接" class="headerlink" title="非持久性连接"></a>非持久性连接</h3><p>即浏览器每请求一个Web文档，就创建一个新的连接，当文档传输完毕后，连接就立刻被释放。</p><ul><li>HTTP 0.9、HTTP 1.0 采用此连接方式</li></ul><h3 id="持久性连接"><a href="#持久性连接" class="headerlink" title="持久性连接"></a>持久性连接</h3><p>一个连接中，可以进行多次文档的请求和响应。服务器在发送完响应后，并不立即释放连接，浏览器可以使用该连接继续请求其他文档。连接保持的时间可以由双方进行协商。</p><h2 id="HTTP报文结构"><a href="#HTTP报文结构" class="headerlink" title="HTTP报文结构"></a>HTTP报文结构</h2><p>请求报文</p><p><img src="https://gitee.com/AAWG/image/raw/master/202109192016732.png" alt="image-20210919201642698"></p><p>响应报文</p><p><img src="https://gitee.com/AAWG/image/raw/master/202109192018373.png" alt="image-20210919201817338"></p><h3 id="HTTP请求方法"><a href="#HTTP请求方法" class="headerlink" title="HTTP请求方法"></a>HTTP请求方法</h3><ol><li>GET：请求指定的页面信息，并返回实体主体</li><li>POST：向指定资源提交数据进行处理请求（提交表单或上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源建立或已有资源的修改</li><li>HEAD：与GET几乎一样，只是响应包中没有响应体，只有响应消息头中的元信息。</li><li>PUT：向指定资源位置上传其最新内容</li><li>DELETE：请求服务器删除Request-URI所标识的资源</li><li>OPTIONS：返回服务器针对特定资源所支持的HTTP请求方法，也可以利用向Web服务器发送<code>*</code>的请求来测试服务器的功能性</li><li>TRACE：回显服务器收到的请求，主要用于测试或诊断</li><li>CONNECT：HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。</li></ol><h2 id="状态码"><a href="#状态码" class="headerlink" title="状态码"></a>状态码</h2><table><thead><tr><th>状态码</th><th>响应类别</th><th>含义</th></tr></thead><tbody><tr><td>1xx</td><td>信息状态码</td><td>服务器正在处理请求</td></tr><tr><td>2xx</td><td>成功状态码</td><td>请求已正常处理完毕</td></tr><tr><td>3xx</td><td>重定向状态码</td><td>需要进行额外操作完成请求</td></tr><tr><td>4xx</td><td>客户端错误状态码</td><td>客户端原因导致服务器无法处理请求</td></tr><tr><td>5xx</td><td>服务器错误状态码</td><td>服务器原因导致处理请求出错</td></tr></tbody></table><table><thead><tr><th>状态码</th><th>含义</th><th>状态码</th><th>含义</th></tr></thead><tbody><tr><td>200</td><td>表示请求被服务器正常处理（最常见）</td><td>307</td><td>临时重定向，POST不会变成GET</td></tr><tr><td>204</td><td>表示请求已成功处理，但是没有内容返回</td><td>400</td><td>请求报文语法错误或参数错误</td></tr><tr><td>206</td><td>表示服务器已经完成了部分GET请求</td><td>401</td><td>需要通过HTTP认证，或认证失败，未授权访问居多</td></tr><tr><td>301</td><td>永久重定向，资源已永久分配新URL</td><td>403</td><td>请求资源被拒绝</td></tr><tr><td>302</td><td>临时重定向，资源已临时分配新URL</td><td>404</td><td>无法找到请求资源</td></tr><tr><td>303</td><td>临时重定向，期望使用GET定向获取</td><td>500</td><td>服务器故障或Web应用故障</td></tr><tr><td>304</td><td>发送的附带条件请求未满足</td><td>503</td><td>服务器超负荷或停机维护</td></tr></tbody></table><h2 id="HTTP头部"><a href="#HTTP头部" class="headerlink" title="HTTP头部"></a>HTTP头部</h2><p>请求头键值</p><table><thead><tr><th>头（Header）</th><th>说明</th></tr></thead><tbody><tr><td>User-Agent</td><td>关于浏览器和它平台的信息，如Mozilla4.0</td></tr><tr><td>Accept</td><td>客户能处理的页面的类型，如text/html</td></tr><tr><td>Accept-Charset</td><td>客户可以接受的字符集，如Unicode-1-1， UTF-8</td></tr><tr><td>Accept-Encoding</td><td>客户能处理的页面编码方法，如gzip</td></tr><tr><td>Accept-Language</td><td>客户能处理的自然语言，如en（英语），zh-cn（简体中文）</td></tr><tr><td>Host</td><td>服务器的DNS名称。从URL中提取出来，必需</td></tr><tr><td>Referer</td><td>用户从该URL代表的页面出发访问当前请求的页面</td></tr><tr><td>Cookie</td><td>将以前设置的Cookie送回服务器，可用来作为会话信息</td></tr><tr><td>Date</td><td>消息被发送时的日期和时间</td></tr></tbody></table><p>响应头键值</p><table><thead><tr><th>头（header）</th><th>说明</th></tr></thead><tbody><tr><td>Date</td><td>消息被发送时的日期和时间</td></tr><tr><td>Server</td><td>关于服务器的信息</td></tr><tr><td>Content-Encoding</td><td>内容是如何被编码的（如gzip）</td></tr><tr><td>Content-Language</td><td>页面所使用的自然语言</td></tr><tr><td>Content-Length</td><td>以字节计算的页面长度</td></tr><tr><td>Content-Type</td><td>页面的MIME类型</td></tr><tr><td>Last-Modified</td><td>页面最后被修改的时间和日期，在页面缓存机制中意义重大</td></tr><tr><td>Location</td><td>指示客户将请求发送给别处，即重定向到另一个URL</td></tr><tr><td>Set-Cookie</td><td>服务器希望客户保存一个Cookie</td></tr></tbody></table><h1 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h1><h2 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h2><p>全称：Uniform Resource Location，统一资源定位符。从互联网上得到的资源的位置和访问方法的一种简洁的表示，是互联网上标准资源的地址。互联网上的每个文件都有一个唯一的URL</p><h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><p>协议://用户名:密码@子域名.域名.顶级域名:端口/目录/文件名.文件后缀?参数=值#标志</p><p>相对URL:/目录/文件名.文件后缀?参数=值#标志</p><p>例子:<a href="http://www.xxx.com/test/index.html?boardID=5&amp;ID=23445&amp;page=1#name">http://www.xxx.com:80/test/index.html?boardID=5&amp;ID=23445&amp;page=1#name</a></p><h2 id="URL常见协议"><a href="#URL常见协议" class="headerlink" title="URL常见协议"></a>URL常见协议</h2><p>http——超文本传输协议</p><p>https——用安全套接字层传送的超文本传输协议</p><p>ftp——文件传输协议</p><p>mailto——电子邮件地址</p><p>ldap——轻型目录访问协议搜索</p><p>file——当地电脑活网上分享的文件</p><p>news——Usenet新闻组</p><p>gopher——Gopher协议</p><p>telnet——Telnet协议</p><h2 id="URL编码"><a href="#URL编码" class="headerlink" title="URL编码"></a>URL编码</h2><ul><li>只能使用ASCII字符集来通过因特网进行发送</li><li>URL编码使用<code>%</code>其后跟随两位的十六进制数来替换非ASCII自负</li><li>URL不能包含空格。URL编码通常使用+来替换空格</li><li>只有字母和数字[0-9a-zA-Z]、一些特殊符号<code>$-_.+!*&#39;(),</code>[不包含双引号]、以及某些保留字，才可以不经过编码直接用于URL</li></ul><h1 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a>同源策略</h1><h2 id="简介-2"><a href="#简介-2" class="headerlink" title="简介"></a>简介</h2><p>同源策略（SOP）</p><p>域名，协议，端口号三者相同</p><p>同源策略是浏览器的行为，是为了保护本地的策略不被JS代码获取回来的数据污染。</p><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>如果没有同源设计策略，在A网站加载过的js脚本，就能够在没有加载过这个脚本B上的页面随意执行并被读取，这就可能造成页面混乱、被破坏以及数据窃取等不安全的行为</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
